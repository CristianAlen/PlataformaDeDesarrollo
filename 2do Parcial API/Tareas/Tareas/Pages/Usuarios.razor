@page "/usuarios/usuarios"

@using Tareas.Data;

@inject UsuarioService service
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<h3>Usuarios</h3>
<button class="btn btn-success" @onclick="()=>Editar(0)">Nuevo</button>
    @if (usuarios == null)
    {
        <p>Loading...</p>
    }

    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Accion</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in usuarios)
                {
                    <tr>
                        <td>@item.NombreUsuario</td>
                        <td><button class="btn" @onclick="()=>Editar(item.IdUsuario)">Editar</button> <button class="btn" @onclick="()=>Borrar(item.IdUsuario)">Borrar</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @code {
        private List<Tareas.Data.Usuario> usuarios;

        protected override async Task OnInitializedAsync()
        {
            usuarios = await service.GetUsuario();

            //Guardar Usuario
            //var usuario = await service.SetUsuario(new Usuario { NombreUsuario = "usuario", Clave = "clave" });

        }

        protected void Editar(int id)
        {
            navigation.NavigateTo("usuarios/editar/" + id);
        }

        async Task Borrar(int id)
        {
            bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar el usuario?");
            if (confirmed)
            {
                await service.Remove(id);
                usuarios = await service.GetUsuario();
            }
        }
    }
